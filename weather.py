# bot_new/weather.py
import logging
from aiogram import Router, types, F
from aiogram.filters import StateFilter
import aiohttp
from datetime import datetime

from config import WEATHER_API_KEY
from utils import get_user_city, get_wind_direction
from keyboards import weather_kb, main_menu_kb # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

router = Router()
logger = logging.getLogger(__name__)

# ... (WEATHER_ICONS –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
WEATHER_ICONS = {
    "01d": "‚òÄÔ∏è", "01n": "üåô",
    "02d": "üå§Ô∏è", "02n": "‚òÅÔ∏è",
    "03d": "‚òÅÔ∏è", "03n": "‚òÅÔ∏è",
    "04d": "‚òÅÔ∏è", "04n": "‚òÅÔ∏è",
    "09d": "üåßÔ∏è", "09n": "üåßÔ∏è",
    "10d": "üå¶Ô∏è", "10n": "üåßÔ∏è",
    "11d": "‚õàÔ∏è", "11n": "‚õàÔ∏è",
    "13d": "‚ùÑÔ∏è", "13n": "‚ùÑÔ∏è",
    "50d": "üå´Ô∏è", "50n": "üå´Ô∏è",
}


@router.message(StateFilter(None), F.text == "–ü–æ–≥–æ–¥–∞ üå§Ô∏è") # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
async def handle_weather_menu(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–≥–æ–¥–∞".
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–∞–∑–¥–µ–ª –ø–æ–≥–æ–¥—ã.
    """
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞–∂–∞–ª '–ü–æ–≥–æ–¥–∞'")
    city = get_user_city(message.from_user.id)
    if not city:
        await message.answer(
            "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –º–µ–Ω—é '–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ ‚úèÔ∏è', —á—Ç–æ–±—ã —è –º–æ–≥ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É.",
            reply_markup=main_menu_kb # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, —Ç.–∫. –±–µ–∑ –≥–æ—Ä–æ–¥–∞ –∑–¥–µ—Å—å –¥–µ–ª–∞—Ç—å –Ω–µ—á–µ–≥–æ
        )
        return

    await message.answer(
        f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞: <b>{city}</b>\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É.",
        reply_markup=weather_kb,
        parse_mode="HTML"
    )

@router.message(StateFilter(None), F.text == "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É —Å–µ–π—á–∞—Å üå¶Ô∏è") # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
async def handle_get_weather(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É —Å–µ–π—á–∞—Å".
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É")
    user_id = message.from_user.id
    city = get_user_city(user_id)

    if not city:
        await message.answer(
             "–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞—à —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ '–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ ‚úèÔ∏è'.",
             reply_markup=main_menu_kb # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        )
        return

    if not WEATHER_API_KEY:
        await message.answer(
            "‚ùå –ö–ª—é—á API –ø–æ–≥–æ–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ù–µ –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.",
            reply_markup=weather_kb # –û—Å—Ç–∞–≤–ª—è–µ–º –≤ –º–µ–Ω—é –ø–æ–≥–æ–¥—ã
        )
        logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è {city} –±–µ–∑ API –∫–ª—é—á–∞.")
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–∂–∏–¥–∞–Ω–∏–∏
    processing_message = await message.answer("‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ...", reply_markup=types.ReplyKeyboardRemove())

    url = f"http://api.openweathermap.org/data/2.5/weather"
    params = {
        'q': city,
        'appid': WEATHER_API_KEY,
        'units': 'metric', # –ì—Ä–∞–¥—É—Å—ã –¶–µ–ª—å—Å–∏—è
        'lang': 'ru'       # –Ø–∑—ã–∫ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–≥–æ–¥—ã
    }

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, params=params, timeout=10) as response:
                logger.debug(f"–ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è {city}. –°—Ç–∞—Ç—É—Å: {response.status}")
                if response.status == 200:
                    data = await response.json()
                    logger.debug(f"–û—Ç–≤–µ—Ç API –ø–æ–≥–æ–¥—ã: {data}")

                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                    city_name = data.get('name', city)
                    temp = data['main']['temp']
                    feels_like = data['main']['feels_like']
                    humidity = data['main']['humidity']
                    pressure_hpa = data['main']['pressure']
                    pressure_mmhg = round(pressure_hpa * 0.750062)
                    description = data['weather'][0]['description'].capitalize()
                    icon_code = data['weather'][0]['icon']
                    weather_icon = WEATHER_ICONS.get(icon_code, "‚ùì")
                    wind_speed = data['wind']['speed']
                    wind_deg = data['wind'].get('deg')
                    wind_dir_str = get_wind_direction(wind_deg) if wind_deg is not None else ""
                    timezone_offset = data.get('timezone', 0)
                    sunrise_ts = data['sys']['sunrise'] + timezone_offset
                    sunset_ts = data['sys']['sunset'] + timezone_offset
                    sunrise_time = datetime.utcfromtimestamp(sunrise_ts).strftime('%H:%M')
                    sunset_time = datetime.utcfromtimestamp(sunset_ts).strftime('%H:%M')

                    weather_report = (
                        f"üìç <b>{city_name}</b>\n"
                        f"{weather_icon} {description}\n\n"
                        f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <b>{temp:.1f}¬∞C</b>\n"
                        f"ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like:.1f}¬∞C\n"
                        f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                        f"üï∞Ô∏è –î–∞–≤–ª–µ–Ω–∏–µ: {pressure_mmhg} –º–º —Ä—Ç. —Å—Ç.\n"
                        f"üí® –í–µ—Ç–µ—Ä: {wind_speed:.1f} –º/—Å {wind_dir_str}\n\n"
                        f"üåÖ –í–æ—Å—Ö–æ–¥: {sunrise_time}\n"
                        f"üåá –ó–∞–∫–∞—Ç: {sunset_time}"
                    )
                    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–∂–∏–¥–∞–Ω–∏–∏, –∑–∞–º–µ–Ω—è—è –µ–≥–æ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    await processing_message.edit_text(weather_report, parse_mode="HTML", reply_markup=weather_kb)

                elif response.status == 404:
                    logger.warning(f"–ì–æ—Ä–æ–¥ '{city}' –Ω–µ –Ω–∞–π–¥–µ–Ω API –ø–æ–≥–æ–¥—ã (404).")
                    await processing_message.edit_text(
                        f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≥–æ—Ä–æ–¥–∞ <b>{city}</b>.\n"
                        "–í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. "
                        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ —á–µ—Ä–µ–∑ –º–µ–Ω—é.",
                        parse_mode="HTML",
                        reply_markup=main_menu_kb
                    )
                else:
                    error_text = await response.text()
                    logger.error(f"–û—à–∏–±–∫–∞ API –ø–æ–≥–æ–¥—ã ({response.status}) –¥–ª—è –≥–æ—Ä–æ–¥–∞ '{city}': {error_text}")
                    await processing_message.edit_text(
                        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                        reply_markup=weather_kb
                    )

    except aiohttp.ClientConnectorError as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã –¥–ª—è '{city}': {e}")
        await processing_message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø–æ–≥–æ–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=weather_kb)
    except TimeoutError:
        logger.error(f"–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã –¥–ª—è '{city}'.")
        await processing_message.edit_text("‚ùå –°–µ—Ä–≤–µ—Ä –ø–æ–≥–æ–¥—ã –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=weather_kb)
    except Exception as e:
        logger.exception(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã –¥–ª—è '{city}': {e}")
        await processing_message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã.", reply_markup=weather_kb)