import requests
import json
import configparser

config = configparser.ConfigParser()
config.read('config.ini')
WEATHER_API_KEY = config['weather']['api_key']
BASE_WEATHER_URL = "https://api.openweathermap.org/data/2.5/weather?"

def get_weather(city):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —Å OpenWeatherMap.
    """
    params = {
        'q': city,
        'appid': WEATHER_API_KEY,
        'units': 'metric',
        'lang': 'ru'
    }
    try:
        response = requests.get(BASE_WEATHER_URL, params=params)
        response.raise_for_status()
        data = response.json()
        return data
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã: {e}")
        return None

def format_weather_data(weather_data):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –≤ –∂–µ–ª–∞–µ–º—ã–π –≤–∏–¥.

    Args:
        weather_data (dict): –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–≥–æ–¥–µ.

    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ.
    """
    city = weather_data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    temperature = weather_data.get('main', {}).get('temp')
    feels_like = weather_data.get('main', {}).get('feels_like')
    humidity = weather_data.get('main', {}).get('humidity')
    wind_speed = weather_data.get('wind', {}).get('speed')
    wind_deg = weather_data.get('wind', {}).get('deg')
    description = weather_data.get('weather', [{}])[0].get('description', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
    sunrise_timestamp = weather_data.get('sys', {}).get('sunrise')
    sunset_timestamp = weather_data.get('sys', {}).get('sunset')

    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ –∏ –∑–∞–∫–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç HH:MM
    import datetime
    sunrise_time = datetime.datetime.fromtimestamp(sunrise_timestamp).strftime('%H:%M') if sunrise_timestamp else '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
    sunset_time = datetime.datetime.fromtimestamp(sunset_timestamp).strftime('%H:%M') if sunset_timestamp else '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
    wind_direction = ""
    if wind_deg is not None:
        if 0 <= wind_deg < 22.5 or 337.5 <= wind_deg < 360:
            wind_direction = "‚¨ÜÔ∏è –°–µ–≤–µ—Ä"
        elif 22.5 <= wind_deg < 67.5:
            wind_direction = "‚ÜóÔ∏è –°–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ–∫"
        elif 67.5 <= wind_deg < 112.5:
            wind_direction = "‚û°Ô∏è –í–æ—Å—Ç–æ–∫"
        elif 112.5 <= wind_deg < 157.5:
            wind_direction = "‚ÜòÔ∏è –Æ–≥–æ-–≤–æ—Å—Ç–æ–∫"
        elif 157.5 <= wind_deg < 202.5:
            wind_direction = "‚¨áÔ∏è –Æ–≥"
        elif 202.5 <= wind_deg < 247.5:
            wind_direction = "‚ÜôÔ∏è –Æ–≥–æ-–∑–∞–ø–∞–¥"
        elif 247.5 <= wind_deg < 292.5:
            wind_direction = "‚¨ÖÔ∏è –ó–∞–ø–∞–¥"
        elif 292.5 <= wind_deg < 337.5:
            wind_direction = "‚ÜñÔ∏è –°–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥"
        else:
            wind_direction = f"{wind_deg}¬∞" # –ï—Å–ª–∏ –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

    formatted_message = f"üåÜ –ü–æ–≥–æ–¥–∞ –≤ {city} —Å–µ–≥–æ–¥–Ω—è:\n\n"
    formatted_message += f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature:.2f}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like:.2f}¬∞C)\n"
    formatted_message += f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
    formatted_message += f"üå¨Ô∏è –í–µ—Ç–µ—Ä: {wind_direction} {wind_speed:.2f} –º/—Å\n"
    formatted_message += f"üåÖ –í–æ—Å—Ö–æ–¥: {sunrise_time}\n"
    formatted_message += f"üåá –ó–∞–∫–∞—Ç: {sunset_time}\n"
    formatted_message += f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: {description.capitalize()}\n"

    return formatted_message