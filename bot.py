import os
import requests
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from dotenv import load_dotenv

# --- –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ ---
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≥–æ—Ä–æ–¥–æ–≤ ---
weather_kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
weather_kb.add(
    KeyboardButton("–ú–æ—Å–∫–≤–∞"),
    KeyboardButton("–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"),
    KeyboardButton("–ö–∏–µ–≤"),
    KeyboardButton("–ú–∏–Ω—Å–∫")
)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply(
        "üå§Ô∏è –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã.\n"
        "–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π:",
        reply_markup=weather_kb
    )

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
@dp.message_handler()
async def get_weather(message: types.Message):
    city = message.text.strip().lower()
    
    try:
        # –ó–∞–ø—Ä–æ—Å –∫ API OpenWeatherMap
        url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
        response = requests.get(url)
        data = response.json()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
        if response.status_code != 200:
            await message.reply("‚ùå –û—à–∏–±–∫–∞ API. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
            return

        # –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö
        temp = data["main"]["temp"]
        feels_like = data["main"]["feels_like"]
        humidity = data["main"]["humidity"]
        wind_speed = data["wind"]["speed"]
        weather_desc = data["weather"][0]["description"]
        icon_code = data["weather"][0]["icon"]

        # –ò–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥—ã
        icons = {
            "01": "‚òÄÔ∏è",  # —è—Å–Ω–æ
            "02": "‚õÖ",  # –º–∞–ª–æ –æ–±–ª–∞–∫–æ–≤
            "03": "‚òÅÔ∏è",  # –æ–±–ª–∞—á–Ω–æ
            "04": "‚òÅÔ∏è",  # –ø–∞—Å–º—É—Ä–Ω–æ
            "09": "üåßÔ∏è",  # –¥–æ–∂–¥—å
            "10": "üå¶Ô∏è",  # –¥–æ–∂–¥—å —Å —Å–æ–ª–Ω—Ü–µ–º
            "11": "‚õàÔ∏è",  # –≥—Ä–æ–∑–∞
            "13": "‚ùÑÔ∏è",  # —Å–Ω–µ–≥
            "50": "üå´Ô∏è"   # —Ç—É–º–∞–Ω
        }
        weather_icon = icons.get(icon_code[:2], "üå°Ô∏è")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        await message.reply(
            f"{weather_icon} –ü–æ–≥–æ–¥–∞ –≤ {city.capitalize()}:\n"
            f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
            f"üå¨Ô∏è –í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
            f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: {weather_desc}"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        await message.reply("‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)