# bot_new/common_handlers.py
from aiogram import Router, types, F
from aiogram.filters import CommandStart, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state

from keyboards import main_menu_kb # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ keyboards.py
import logging

router = Router()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def handle_start(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é.
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.
    """
    current_state = await state.get_state()
    if current_state is not None:
        logger.info(f"–°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è {current_state} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start")
        await state.clear()

    await message.answer(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –Ø –≤–∞—à –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_kb
    )


@router.message(StateFilter(None), F.text.lower() == "–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚Ü©Ô∏è")
async def handle_back_to_main_menu_no_state(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    await message.answer(
        "üìã –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_kb
    )

@router.message(F.text.lower().in_({"–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚Ü©Ô∏è", "–æ—Ç–º–µ–Ω–∞ ‚ùå"})) # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
async def handle_back_to_main_menu_with_state(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é" –∏–ª–∏ "–û—Ç–º–µ–Ω–∞", –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    current_state = await state.get_state()
    if current_state is not None:
        logger.info(f"–û—Ç–º–µ–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è {current_state} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        await state.clear()
        await message.answer(
            "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
            reply_markup=main_menu_kb # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        )
    else:
        # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await message.answer(
            "üìã –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=main_menu_kb
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ –≤–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
@router.message(StateFilter(None))
async def handle_unknown_message(message: types.Message):
    """
    –û—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç
    –∫–Ω–æ–ø–∫–∞–º –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    # –≠—Ç–æ –Ω—É–∂–Ω–æ, —Ç.–∫. –º—ã –Ω–µ –∑–∞–¥–∞–ª–∏ StateFilter(None) –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    # –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –º–æ–¥—É–ª—è—Ö (weather, currency, city_management)
    # –∏ –æ–Ω–∏ –º–æ–≥—É—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–º–∏.
    # –õ—É—á—à–µ –≤—Å–µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å StateFilter(None) –∫ —Ç–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.
    # –ù–æ –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º —Ç–∞–∫ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.
    known_buttons = ["–ø–æ–≥–æ–¥–∞ üå§Ô∏è", "–∫—É—Ä—Å –≤–∞–ª—é—Ç üí∞", "–º–æ–π –≥–æ—Ä–æ–¥ üèôÔ∏è", "–∏–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ ‚úèÔ∏è", "—Ç—Ä–µ–≤–æ–≥–∞ üö®"]
    if message.text and message.text.lower() not in known_buttons:
        await message.answer(
            "ü§î –ù–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.",
            reply_markup=main_menu_kb
        )